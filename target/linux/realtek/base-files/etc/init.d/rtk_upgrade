#!/bin/sh /etc/rc.common
# Copyright (C) 2016 OpenWrt.org

START=14

split_opkg_status() {
	local line
	local gap=1
	exec 3>/dev/null
	rm -rf $2
	mkdir -p $2
	cat $1 | while read; do
		line="$REPLY"
		if [ -z "$line" ]; then
			echo >&3
			exec 3>&-
			exec 3>/dev/null
			gap=1
		else
			if [ "x1" = "x$gap" ] && echo "$line" | grep -q "^Package: "; then
				exec 3>&-
				exec 3>$2/`echo "$line"|cut -d' ' -f2`
				gap=0
			fi
			echo "$line" >&3
		fi
	done
	exec 3>&-
}

split_both_status() {
	split_opkg_status /usr/lib/opkg/status /tmp/newopkgstatus &
	split_opkg_status /rom/usr/lib/opkg/status /tmp/romopkgstatus &
	wait
}

ls_all_pkgs() {
	( cd /usr/lib/opkg/info ; find . -maxdepth 1 -name '*.control' | sed -E 's#./(.*).control#\1#g' | grep -v '^kmod-' | grep -v '^kernel$' )
}

ls_all_kmods() {
	[ -f /tmp/romopkgstatus/kernel ] && echo kernel
	( cd /rom/usr/lib/opkg/info ; find . -maxdepth 1 -name 'kmod-*.control' | sed -E 's#./(.*).control#\1#g' )
}

rebuild_opkg_status() {
	local line
	ls_all_kmods | while read line; do
		cat /tmp/romopkgstatus/$line
	done
	ls_all_pkgs | while read line; do
		if [ -f /overlay/upper/usr/lib/opkg/info/$line.control ]; then
			cat /tmp/newopkgstatus/$line
		else
			cat /tmp/romopkgstatus/$line
		fi
	done
}

clean_tmp_files() {
	rm -rf /tmp/newopkgstatus
	rm -rf /tmp/romopkgstatus
}

boot() {
	[ -f /.recovery_mode ] && return 0

	if [ -f /usr/lib/opkg/.upgrading ]; then
		rm -f /usr/lib/opkg/.upgrading
		split_both_status
		rebuild_opkg_status > /usr/lib/opkg/status
		clean_tmp_files
	fi
}
